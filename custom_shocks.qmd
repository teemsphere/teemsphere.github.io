# Custom shocks

## Overview
The `"custom"` shock type via `ems_shock()` allows for granular control over heterogenous shocks that are allocated on a tuple-specific basis, inputted as a CSV file or dataframe (or dataframe equivalent) through `"input"`.

## Full variable custom shocks
The following code demonstrates culture shocks on all variable tupes for variables from 2 to 5 sets
```r
REGr <- c("asia", "eit", "lam", "maf", "oecd")
ENDWe <- c("labor", "capital", "natlres", "land")
COMMc <- c("svces", "food", "crops", "mnfcs", "livestock")
ACTSa <- c("svces", "food", "crops", "mnfcs", "livestock")
MARGm <- "svces"
ALLTIMEt <- seq(0, length(time_steps) - 1)

# 2D
pop <- expand.grid(
  REGr = REGr,
  ALLTIMEt = ALLTIMEt,
  stringsAsFactors = FALSE
)

pop <- pop[do.call(order, pop), ]
pop$Value <- runif(nrow(pop))

# 3D
aoall <- expand.grid(
  ACTSa = ACTSa,
  REGr = REGr,
  ALLTIMEt = ALLTIMEt,
  stringsAsFactors = FALSE
)

aoall <- aoall[do.call(order, aoall), ]
aoall$Value <- runif(nrow(aoall))

# 4D
afeall <- expand.grid(
  ENDWe = ENDWe,
  ACTSa = ACTSa,
  REGr = REGr,
  ALLTIMEt = ALLTIMEt,
  stringsAsFactors = FALSE
)

afeall <- afeall[do.call(order, afeall), ]
afeall$Value <- runif(nrow(afeall))

# 5D
atall <- expand.grid(
  MARGm = MARGm,
  COMMc = COMMc,
  REGs = REGr,
  REGd = REGr,
  ALLTIMEt = ALLTIMEt,
  stringsAsFactors = FALSE
)

atall <- atall[do.call(order, atall), ]
atall$Value <- runif(nrow(atall))

pop_shk <- ems_shock(
  var = "pop",
  type = "custom",
  input = pop
)

aoall_shk <- ems_shock(
  var = "aoall",
  type = "custom",
  input = aoall
)

afeall_shk <- ems_shock(
  var = "afeall",
  type = "custom",
  input = afeall
)

atall_shk <- ems_shock(
  var = "atall",
  type = "custom",
  input = atall
)
```
These shocks can now be loaded as a list
```r
cmf_path <- ems_deploy(
  data = data,
  model = model,
  shock = list(pop_shk, aoall_shk, afeall_shk, atall_shk)
)
```
## Partial variable custom shocks
Custom shocks are only carried out on tuples included within the input dataframe or CSV. Here we make appropriate swaps and carry out a custom shock (heterogenous values) across part of a variable:
```r
qfd_in <- ems_swap(
  var = "qfd",
  REGr = "lam",
  ACTSa = "crops"
)

qfd_in2 <- ems_swap(
  var = "qfd",
  COMMc = "food",
  REGr = "oecd",
  ACTSa = "crops"
)

tfd_out <- ems_swap(
  var = "tfd",
  REGr = "lam",
  ACTSa = "crops"
)

tfd_out2 <- ems_swap(
  var = "tfd",
  COMMc = "food",
  REGr = "oecd",
  ACTSa = "crops"
)

qfd_shk <- expand.grid(
  COMMc = c("svces", "food", "crops", "mnfcs", "livestock"),
  REGr = "lam",
  ACTSa = "crops",
  ALLTIMEt = seq(0, length(time_steps) - 1),
  stringsAsFactors = FALSE
)

qfd_shk <- rbind(qfd_shk, data.frame(
  COMMc = "food",
  REGr = "oecd",
  ACTSa = "crops",
  ALLTIMEt = seq(0, length(time_steps) - 1)
))
qfd_shk$Value <- runif(nrow(qfd_shk))
qfd_shk <- qfd_shk[do.call(order, qfd_shk), ]

cst_shk <- ems_shock(
  var = "qfd",
  type = "custom",
  input = qfd_shk
)
```
The swaps and shocks are then loaded as normal
```r
cmf_path <- ems_deploy(
  data = data,
  model = model,
  swap_in = list(qfd_in, qfd_in2),
  swap_out = list(tfd_out, tfd_out2),
  shock = cst_shk
)
```
