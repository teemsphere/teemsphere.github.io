# Loading models

## Overview

The `ems_model()` function loads general model specifications, conducts data-agnositic pre-pipeline checks, and determines temporal dynamics. The output of this function is a tibble with parsed components and is a required input to the `"model_config"` argument within the [`ems_deploy()`] function.

# The Tablo file {#tab_files}
Model input in `teems` is currently limited to Tablo (.tab) files. Users may select from one of the internally available and immediately compatible models that ship with the [`teems`](https://github.com/teemsphere/teems-R) R package: [teems-models](https://github.com/teemsphere/teems-models). We intend to offer more models internally as the package matures. Each model also includes a standard closure that will be applied unless otherwise specified within `ems_deploy()`. A model input will be recognized as internal in the absence of a ".tab" file extension and checked against available internal models.
```r
model <- ems_model(tab_file = "GTAP-REv1")
```
Users may also load their own models in the form of a path to a Tablo file.
```r
usr_model <- ems_model(tab_file = "path/to/usr_tab.tab")
```
Here we recommend that users seeking to load custom models first take a glance at the formatting of internal models in order to make any necessary modifications for use within the `teems` software ecosystem. In many cases it may be easiest to use existing compatible models [teems-models](https://github.com/teemsphere/teems-models) as a starting point for modifications.

## Incompatible features
The [teems-solver](https://github.com/teemsphere/teems-solver) was originally designed as a GEMPack emulator and we have no intention of attempting to reproduce the very thorough [GEMPack documentation](https://www.copsmodels.com/gpmanual.htm) on the Tablo scripting language and underlying solution software. *Most* Tablo model files (.tab) that work with GEMPack will also work with the [teems-solver](https://github.com/teemsphere/teems-solver) with some minor modifications. There are however a range of newer GEMPack features that are not compatible and are not likely to be incorporated. Fortunately there are workarounds for the vast majority as described below.

Considerable efforts have been made to correctly parse Tablo files but it is likely that custom Tablo files will need to be modified. If you find an incompatibility not listed here and feel that it should be addressed, please feel free to contact us with your model file. Some of the more frequent incompatibilities and workarounds are listed here. 

### Set and subset declarations
Multiple `+` or `-` operators within a single declaration is not supported.
Instead of
```
Set A123 = A1 + A2 + A3;
```
Use
```
Set A12 = A1 + A1;
Set A123 = A12 + A3;
```
One set cannot be declared identical to a second set without using a `Read` statement.
Instead of
```
Set A # example set A # maximum size 5 read elements from file GTAPSETS header \"H2\";
Set B # example set # = Set A;
```
Use
```
Set A # example set A # maximum size 5 read elements from file GTAPSETS header \"H2\";
Set B # example set B # maximum size 5 read elements from file GTAPSETS header \"H2\";
```

* The SLUG coefficient is not used to identify sluggish endowments. Declare these sets explicitly or via set operations.
* The `CGDS` sector in v6.2 format models is renamed to `zcgds` by default due to R `data.table` C-locale sorting and preference for all set elements to be lowercase.

<!-- Subset [(by numbers)](https://www.copsmodels.com/gpmanual.htm#gpd2.4.7.1) not supported  -->

### Formulas and Equations
No IF statements in Formula or Equation RHS (use sets)
Instead of
```
Formula (all,c,COMM)(all,r,REG)
    VCB(c,r) = VDB(c,r) + sum{d,REG, VXSB(c,r,d)} + IF[c in MARG, VST(c,r)];
```
Use
```
Formula (all,c,MARG)(all,r,REG)
    VCB(c,r) = VDB(c,r) + sum{d,REG, VXSB(c,r,d)} + VST(c,r);
Formula (all,c,NMRG)(all,r,REG)
    VCB(c,r) = VDB(c,r) + sum{d,REG, VXSB(c,r,d)};
``` 
## Variable omissions
Variables specified with `var_omit` will be removed from the model closure and replaced with `0` within the model file. 
Standard v7.0 data format variable omissions
```r
model <- ems_model(
  tab_file = "GTAP-REv1",
  var_omit = c(
    "atall",
    "avaall",
    "tfe",
    "tfm",
    "tgd",
    "tgm",
    "tid",
    "tim"))
``` 
Standard v6.2 data format variable omissions
```r
model <- ems_model(
tab_file = "GTAPv6.2",
var_omit = c(
  "atall",
  "tfd",
  "avaall",
  "tf",
  "tfm",
  "tgd",
  "tgm",
  "tpd",
  "tpm"
))
```

## Future expansions
Write bidirectional Tablo <-> \LaTeX conversion script to allow for \LaTeX model files
`auto-omit` switch to automatically drop as many variables as possible based on closure and shock specifications