---
execute:
  freeze: auto
---

# Dependencies {#dependencies}

```{r, message = FALSE, warning = FALSE, echo = FALSE}
knitr::opts_knit$set(root.dir = fs::dir_create(tempfile()))
knitr::opts_chunk$set(collapse = TRUE, comment = "#>", eval = TRUE)
options(crayon.enabled = FALSE)
```

This chapter outlines what is needed to run your first CGE model. Ideally all components would be open-source and maybe one day they will be but for the moment there are still some minor hurdles to overcome. Before beginning to write model scripts with [`teems`](https://github.com/teemsphere/teems-R), users will need to gain access to a GTAP database and build the [teems-solver](https://github.com/teemsphere/teems-solver). [GEMPack](https://www.copsmodels.com/gempack.htm) users can skip the solver step although they will be missing out on a considerable degree of functionality both within the solution process itself as well as regarding post-model data availability.

## Data
Currently the only data for teems-compatible CGE model runs is available from the Global Trade Analysis Project [(GTAP)](https://www.gtap.agecon.purdue.edu/). Although the most recent databases are proprietary, GTAP has consistently open-accessed databases two versions out (GTAP 9 database as of the current GTAP 11 release). In order to access the freely available database, users will need to [register](https://www.gtap.agecon.purdue.edu/access_member/profile/profile_addnew.aspx) with GTAP and download the "FlexAgg" format. For GTAP 9 this is accessible under the "GDyn 9 Data Base for 2011" subheader in the "Satellite Data and Utilities" section [here](https://www.gtap.agecon.purdue.edu/databases/archives.asp). For paying GTAP members, the current [`teems`](https://github.com/teemsphere/teems-R) version is capable of handling the "FlexAgg" format for GTAP Databases 10 and 11.

## teems-R package
The R [package](https://github.com/teemsphere/teems-R) is currently in beta and open for testing. Installation is via [remotes](https://github.com/r-lib/remotes) and instructions can be found here: [teems](https://github.com/teemsphere/teems-R).

## teems-solver
[`teems`](https://github.com/teemsphere/teems-R) calls Docker in order to solve the constrained optimization problem using C and Fortran routines. For those unable to use Docker, Singularity-based containerization will be made available in future releases. The solver build and its dependencies can be found here: [teems-solver](https://github.com/teemsphere/teems-solver)